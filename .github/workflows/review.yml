name: AI Code Review
on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: read
  models: read

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      REVIEW_PROMPT: |
        ‰ª•‰∏ã„ÅÆPull Request„ÅÆÂ∑ÆÂàÜ„Çí„Ç≥„Éº„Éâ„É¨„Éì„É•„Éº„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

        „Ç≥„Éº„Éâ„ÅÆÂìÅË≥™„ÄÅ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„ÄÅ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÄÅ„Éô„Çπ„Éà„Éó„É©„ÇØ„ÉÜ„Ç£„Çπ„Å´Èñ¢„Åó„Å¶‰ª•‰∏ã„ÅÆË¶≥ÁÇπ„ÅßË©ï‰æ°„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö

        1. „Ç≥„Éº„Éâ„ÅÆÂìÅË≥™„ÉªÂèØË™≠ÊÄß
        2. „Çª„Ç≠„É•„É™„ÉÜ„Ç£‰∏ä„ÅÆÂïèÈ°å
        3. „Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„Å∏„ÅÆÂΩ±Èüø
        4. „Éê„Ç∞„ÅÆÂèØËÉΩÊÄß
        5. „Éô„Çπ„Éà„Éó„É©„ÇØ„ÉÜ„Ç£„Çπ„ÅÆÈÅµÂÆà

        ÊîπÂñÑÊèêÊ°à„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„ÄÅÂÖ∑‰ΩìÁöÑ„Å™‰øÆÊ≠£ÊñπÊ≥ï„ÇÇÂê´„ÇÅ„Å¶Ë™¨Êòé„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

        ‰ª•‰∏ã„Åå„Ç≥„Éº„Éâ„ÅÆÂ∑ÆÂàÜ„Åß„ÅôÔºö
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR diff
        id: get-diff
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr diff ${{ github.event.number }} > pr_diff.txt
          
          if [ ! -s pr_diff.txt ]; then
            echo "No changes found in PR"
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "has_changes=true" >> $GITHUB_OUTPUT
          
          DIFF_CONTENT=$(cat pr_diff.txt | head -c 8000)
          {
            echo "diff<<EOF"
            echo "$DIFF_CONTENT"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: AI Code Review
        id: code-review
        if: steps.get-diff.outputs.has_changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DIFF_CONTENT='${{ steps.get-diff.outputs.diff }}'
          
          PROMPT_TEXT="${REVIEW_PROMPT}
          $DIFF_CONTENT"
          
          PROMPT=$(echo "$PROMPT_TEXT" | jq -Rs .)

          RAW_RESPONSE=$(curl -s "https://models.github.ai/inference/chat/completions" \
             -H "Content-Type: application/json" \
             -H "Authorization: Bearer $GITHUB_TOKEN" \
             -d "{
              \"messages\": [
                  {
                     \"role\": \"user\",
                     \"content\": $PROMPT
                  }
               ],
               \"model\": \"anthropic/claude-3.5-sonnet\"
            }")

          echo "$RAW_RESPONSE" > raw_response.json

          CONTENT=$(echo "$RAW_RESPONSE" | jq -r '.choices[0].message.content')

          echo "$CONTENT" > review_response.txt

          {
            echo "review<<EOF"
            echo "$CONTENT"
            echo "EOF"
          } >> $GITHUB_OUTPUT

          {
            echo "raw_response<<EOF"
            echo "$RAW_RESPONSE"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: steps.get-diff.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const review = \`## ü§ñ AI Code Review by Claude Sonnet 4

            \${{ steps.code-review.outputs.review }}

            ---
            *This review was automatically generated by Claude Sonnet 4*\`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: review
            });

      - name: Output review as log
        if: steps.get-diff.outputs.has_changes == 'true'
        run: |
          echo "=========================================="
          echo "Claude Sonnet 4„Åã„Çâ„ÅÆ„Ç≥„Éº„Éâ„É¨„Éì„É•„Éº:"
          echo "=========================================="
          echo "${{ steps.code-review.outputs.review }}"
          echo "=========================================="
